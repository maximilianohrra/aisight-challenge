name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2  
    - name: Running unit tests with Mocha
      run: |
        npm install --save-dev mocha
        npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
          
    - name: Build and push
      uses: docker/build-push-action@v3
      with:  
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/helloworld-aisight:latest
 
    - name: Deploy to EC2
      run: |  
        mkdir -p ~/.ssh/
        ssh-keyscan -t rsa ${{ secrets.HOST }} > my_known_hosts
        cat my_known_hosts >> ~/.ssh/known_hosts
        (umask  077 ; echo "${{ secrets.EC2_PRIVATE_KEY }}" | base64 --decode > ~/.ssh/my-key.pem)
        chmod 600 ~/.ssh/my-key.pem        
        scp -i ~/.ssh/my-key.pem -r ./* ${{ secrets.SSH_USER }}@${{ secrets.HOST }}:/home/ubuntu/.
        ssh -i ~/.ssh/my-key.pem ${{ secrets.SSH_USER }}@${{ secrets.HOST }} "bash scriptcontainer.bash helloworld-aisight"
        ssh -i ~/.ssh/my-key.pem ${{ secrets.SSH_USER }}@${{ secrets.HOST }} "docker-compose -f ~/docker-compose-helloworld-aisight.yml up -d"
    
    - name: Run Nginx Ansible playbook
      run: |
        ssh -i ~/.ssh/my-key.pem ${{ secrets.SSH_USER }}@${{ secrets.HOST }} "ansible-playbook -i inventory.ini nginxplaybook.yml"
    
        

        


        
